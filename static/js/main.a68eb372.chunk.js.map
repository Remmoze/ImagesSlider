{"version":3,"sources":["atoms/helper.js","atoms/colors.js","menu/sharedComponents/colorItem.jsx","menu/sharedComponents/colorsAdder.jsx","menu/sharedComponents/settingsSlider.jsx","displayModes/Blinking/atom.js","displayModes/Blinking/menu.jsx","menu/sharedComponents/settingsCheckbox.jsx","displayModes/Dots/atom.js","displayModes/Dots/menu.jsx","displayModes/Gradient/atom.js","displayModes/Gradient/menu.jsx","menu/sharedComponents/imageUpload.jsx","content/city.jpg","displayModes/Image/atom.js","displayModes/Image/menu.jsx","displayModes/Particles/atom.js","displayModes/Particles/menu.jsx","displayModes/Radial/atom.js","displayModes/Radial/menu.jsx","displayModes/Synthwave/atom.js","displayModes/Synthwave/menu.jsx","menu/modesMenu.js","atoms/config.js","menu/modeSelector.jsx","menu/SettingsContainer.jsx","atoms/resetAtoms.js","menu/SettingsOverlay.jsx","display/canvas/windowSize.js","display/canvas/useStorage.js","display/canvas/useCanvas.js","display/drawing/GradientFactory.js","displayModes/Blinking/draw.js","displayModes/Dots/helpers/Vector2.js","displayModes/Dots/helpers/Dot.js","displayModes/Dots/helpers/Grid.js","displayModes/Dots/draw.js","displayModes/Gradient/draw.js","displayModes/Image/draw.js","displayModes/Synthwave/helpers/floor.js","displayModes/Synthwave/helpers/background.js","content/house_sample.png","displayModes/Synthwave/helpers/houseLoading.js","displayModes/Synthwave/helpers/houses.js","display/drawing/canvasUpdateHelper.js","display/drawing/canvasUpdate.js","displayModes/Particles/draw.js","displayModes/Radial/draw.js","displayModes/Synthwave/draw.js","display/canvas/Canvas.jsx","display/canvas/Display.jsx","MainContainer.jsx","index.js"],"names":["setProperty","setter","key","value","state","localStorageEffect","setSelf","onSet","savedValue","localStorage","getItem","JSON","parse","newValue","_","isReset","removeItem","setItem","stringify","colorsAtom","atom","default","effects","useColorsAtom","useRecoilState","colors","setColors","addColor","color","setColorByIndex","index","prevColors","deleteColorByIndex","length","splice","changeColor","setError","strColor","s","Option","style","isColor","ColorItem","blockDelete","useState","error","ListItem","disablePadding","ml","mr","sx","width","height","backgroundColor","border","borderColor","borderRadius","opacity","ListItemText","TextField","onChange","target","id","variant","defaultValue","IconButton","disabled","onClick","ColorsList","item","mt","container","direction","alignItems","Math","floor","random","toString","toUpperCase","List","bgcolor","TransitionGroup","map","Collapse","Divider","SettingsSlider","label","min","max","step","Slider","valueLabelDisplay","blinkingAtom","speed","useBlinkingAtom","blinking","setBlinking","setSpeed","Blinking","SettingsCheckbox","Checkbox","checked","e","Typography","display","dotsAtom","curve","count","showDots","showGrid","maxDistance","useDotsAtom","dots","setDots","setCurve","setCount","setShowDots","setShowGrid","setMaxDistance","Dots","gradientAtom","rotation","PI","useGradientAtom","gradient","setGradient","setRotation","Gradient","angle","toFixed","ImageUpload","imgURL","setImgURL","uploadInputRef","useRef","ref","type","accept","newImage","files","newUrl","URL","createObjectURL","revokeObjectURL","hidden","Button","current","click","imageAtom","imageUrl","City","speedX","speedY","scale","clampX","clampY","useImageAtom","image","setImage","setImageUrl","setSpeedX","setSpeedY","setScale","setClampX","setClampY","Image","particlesAtom","useParticlesAtom","particles","setParticles","Particles","radialAtom","useRadialAtom","radial","setRadial","Radial","synthAtom","floorHeight","numberOfLines","useSynthAtom","synth","setSynth","setFloorHeight","setNumberOfLines","Synthwave","Modes","name","component","configAtom","mode","debug","useConfigAtom","config","setConfig","setMode","setDebug","Mode","mb","FormControl","fullWidth","InputLabel","Select","MenuItem","find","SettingsContainer","resetStates","resetBlinking","useResetRecoilState","resetDots","resetGradient","resetImage","resetParticles","resetRadial","resetSynth","resetColors","useResetAllAtoms","spacing","padding","justifyContent","gutterBottom","Tooltip","title","placement","arrow","pb","SettingsOverlay","Box","position","top","left","maxWidth","SettingsRef","React","forwardRef","props","AnimatedSettingsOverlay","active","Slide","timeout","enter","exit","easing","in","appear","mountOnEnter","unmountOnExit","useWindowSize","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useStorage","frameCount","useCanvas","draw","canvasRef","storage","animationFrameId","context","getContext","render","requestAnimationFrame","cancelAnimationFrame","getRealRadius","canvas","sqrt","getColorStopWidth","radius","getSpeed","getRadius","realRadius","addColorStops","i","colorOffset","addColorStop","createBlinking","x1","y1","x2","y2","createLinearGradient","getGradient","Vector2","x","y","this","vector2","Dot","pos","vel","setVelocity","cos","sin","add","limit","fillStyle","beginPath","arc","fill","createDot","canv","h","v","r","g","b","f","p","q","t","get","num","res","hsvToRgb","Cell","point","Grid","cells","rows","columns","init","ceil","push","dot","addDot","cell","console","getCell","indexOf","getCoordsByIndex","xBoundary","yBoundary","j","intersects","grid","connectDots","dot1","dot2","distance","alpha","padStart","strokeStyle","lineWidth","lineCap","connectDotsCurved","connectDotsLine","moveTo","lineTo","stroke","bezierCurveTo","getBezier","lastSpeed","lastDistance","updateProperties","needsUpdate","removeDot","updateCount","populate","createGradient","getLinearGradient","pattern","offsetX","offsetY","scalingX","scalingY","prevURL","drawFloor","store","offset","scaleX","scaleY","fillRect","grad","amount","filter","pixelOffset","drawLines","drawBackground","getBGGradient","sunBox","sunSize","getSunBox","getSunGradient","drawSun","drawSunLines","globalCompositeOperation","getSunHazeGradient","drawSunHaze","housesImages","houseBox","housesImage","removeWhite","imageData","getImageData","data","putImageData","loadImage","url","Promise","resolve","src","onload","parseHouses","document","createElement","content","createHousesGradient","imageURLs","drawImage","toDataURL","urls","pendingImages","all","then","images","loadHouseImages","housesCache","oldCount","addHousesToCache","oldOffset","drawHouses","HousesImage","slice","update","abs","shouldUpdate","unshift","pop","houseIndex","house","prevMode","prevDimensions","updaters","strokeRect","neighbours","getCellNeighbours","k","neighbour","z","connectNew","args","log","createPattern","updatePattern","setTransform","resetTransform","translate","createRadialGradient","getRadialGradient","createRadial","globalAlpha","CanvasUpdate","needToUpdate","temp","font","textAlign","fillText","drawDefault","updater","drawDebug","Canvas","Display","MainContainer","setCheck","bottom","theme","createTheme","palette","App","StrictMode","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a68eb372.chunk.js","sourcesContent":["const setProperty = (setter, key) => {\r\n    return (value) => {\r\n        setter((state) => ({ ...state, [key]: value }));\r\n    };\r\n};\r\n\r\nconst localStorageEffect =\r\n    (key) =>\r\n    ({ setSelf, onSet }) => {\r\n        const savedValue = localStorage.getItem(key);\r\n        if (savedValue !== null) {\r\n            setSelf(JSON.parse(savedValue));\r\n        }\r\n\r\n        onSet((newValue, _, isReset) => {\r\n            isReset ? localStorage.removeItem(key) : localStorage.setItem(key, JSON.stringify(newValue));\r\n        });\r\n    };\r\n\r\nexport { setProperty, localStorageEffect };\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { localStorageEffect } from \"./helper\";\r\n\r\nconst colorsAtom = atom({\r\n    key: \"Colors\",\r\n    default: [\r\n        \"#FF0000\", // Red\r\n        \"#FFA500\", // Orange\r\n        \"#FFFF00\", // Yellow\r\n        \"#008000\", // Green\r\n        \"#0000FF\", // Blue\r\n        \"#4B0082\", // Indigo\r\n        \"#EE82EE\", // Violet\r\n    ],\r\n    effects: [localStorageEffect(\"Colors\")],\r\n});\r\n\r\nconst useColorsAtom = () => {\r\n    const [colors, setColors] = useRecoilState(colorsAtom);\r\n\r\n    const addColor = (color) => setColors((colors) => [...colors, color]);\r\n    const setColorByIndex = (index, color) => {\r\n        setColors((prevColors) => {\r\n            const colors = [...prevColors];\r\n            colors[index] = color;\r\n            return colors;\r\n        });\r\n    };\r\n    const deleteColorByIndex = (index) => {\r\n        if (colors.length < 2) return;\r\n        setColors((prevColors) => {\r\n            const colors = [...prevColors];\r\n            colors.splice(index, 1);\r\n            return colors;\r\n        });\r\n    };\r\n\r\n    return {\r\n        colors,\r\n        addColor,\r\n        setColorByIndex,\r\n        deleteColorByIndex,\r\n    };\r\n};\r\n\r\nexport { colorsAtom };\r\nexport default useColorsAtom;\r\n","import React, { useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport { IconButton, TextField } from \"@mui/material\";\r\nimport { ListItem, ListItemText } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\n// make this component not dependent on gradient\r\nimport useColorsAtom from \"../../atoms/colors\";\r\n\r\nconst isColor = (strColor) => {\r\n    const s = new Option().style;\r\n    s.color = strColor;\r\n    return s.color !== \"\";\r\n};\r\n\r\nconst changeColor = (setColorByIndex, index, color, setError) => {\r\n    if (!isColor(color)) {\r\n        setError(true);\r\n        return;\r\n    }\r\n    setError(false);\r\n    setColorByIndex(index, color);\r\n};\r\n\r\nconst ColorItem = ({ color, index, blockDelete }) => {\r\n    const { deleteColorByIndex, setColorByIndex } = useColorsAtom();\r\n    const [error, setError] = useState(false);\r\n\r\n    return (\r\n        <ListItem disablePadding>\r\n            <Box\r\n                ml={1}\r\n                mr={1}\r\n                sx={{\r\n                    width: 70,\r\n                    height: 25,\r\n                    backgroundColor: color,\r\n                    border: 2,\r\n                    borderColor: \"#aaaaaa\",\r\n                    borderRadius: 2,\r\n                    \"&:hover\": {\r\n                        backgroundColor: color,\r\n                        opacity: [0.8, 0.8, 0.8],\r\n                    },\r\n                }}\r\n            />\r\n\r\n            <ListItemText>\r\n                <TextField\r\n                    onChange={({ target }) => changeColor(setColorByIndex, index, target.value, setError)}\r\n                    id=\"standard-basic\"\r\n                    variant=\"standard\"\r\n                    color={error ? \"error\" : \"primary\"}\r\n                    defaultValue={color}\r\n                />\r\n            </ListItemText>\r\n            <IconButton disabled={blockDelete} onClick={() => deleteColorByIndex(index)}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default ColorItem;\r\n","import React from \"react\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport { Grid, IconButton } from \"@mui/material\";\r\nimport { List, Divider } from \"@mui/material\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\nimport ColorItem from \"./colorItem\";\r\n\r\n// make this component not dependent on gradient\r\nimport useColorsAtom from \"../../atoms/colors\";\r\n\r\nconst RandomColor = () => {\r\n    return (\r\n        \"#\" +\r\n        Math.floor(Math.random() * 16777215)\r\n            .toString(16)\r\n            .toUpperCase()\r\n    );\r\n};\r\n\r\nconst ColorsList = () => {\r\n    const { colors, addColor } = useColorsAtom();\r\n\r\n    return (\r\n        <Grid item mt={-1}>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>Colors</Grid>\r\n                <Grid item>\r\n                    <IconButton disabled={colors.length >= 9} onClick={() => addColor(RandomColor())}>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <List sx={{ width: \"100%\", bgcolor: \"#00000050\", borderRadius: 3 }}>\r\n                <TransitionGroup>\r\n                    {colors.map((color, index) => (\r\n                        <Collapse key={color}>\r\n                            {index !== 0 && <Divider />}\r\n                            <ColorItem blockDelete={colors.length < 2} color={color} index={index}></ColorItem>\r\n                        </Collapse>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </List>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ColorsList;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Slider } from \"@mui/material\";\r\n\r\nconst SettingsSlider = ({ value, label, onChange, min, max, step, color }) => {\r\n    return (\r\n        <>\r\n            <Grid item>{label}</Grid>\r\n            <Grid item>\r\n                <Slider\r\n                    sx={{ color }}\r\n                    onChange={(_, value) => onChange(value)}\r\n                    value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    step={step}\r\n                    valueLabelDisplay=\"off\"\r\n                />\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SettingsSlider;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nconst blinkingAtom = atom({\r\n    key: \"Blinking\",\r\n    default: {\r\n        speed: 100,\r\n    },\r\n    effects: [localStorageEffect(\"Blinking\")],\r\n});\r\n\r\nconst useBlinkingAtom = () => {\r\n    const [blinking, setBlinking] = useRecoilState(blinkingAtom);\r\n\r\n    const setSpeed = setProperty(setBlinking, \"speed\");\r\n\r\n    return {\r\n        blinking,\r\n        setSpeed,\r\n    };\r\n};\r\n\r\nexport { blinkingAtom };\r\nexport default useBlinkingAtom;\r\n","import ColorsList from \"../../menu/sharedComponents/colorsAdder\";\r\nimport SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\n\r\nimport useBlinkingAtom from \"./atom\";\r\n\r\nconst Blinking = () => {\r\n    const { blinking, setSpeed } = useBlinkingAtom();\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={blinking.speed}\r\n                label={\"Speed\"}\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                onChange={setSpeed}\r\n                color={blinking.speed > 20 ? \"auto\" : \"red\"}\r\n            />\r\n            <ColorsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Blinking;\r\n","import React from \"react\";\r\n\r\nimport { Checkbox, Grid, Typography } from \"@mui/material\";\r\n\r\nconst SettingsCheckbox = ({ value, label, onChange }) => {\r\n    return (\r\n        <Grid mt={-1} ml={-1.5} item>\r\n            <Checkbox checked={value} onChange={(e, value) => onChange(value)} />\r\n            <Typography mt={1} sx={{ display: \"inline\" }}>\r\n                {label}\r\n            </Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SettingsCheckbox;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nconst dotsAtom = atom({\r\n    key: \"Dots\",\r\n    default: {\r\n        curve: 0,\r\n        speed: 50,\r\n        count: 100,\r\n        showDots: true,\r\n        showGrid: false,\r\n        maxDistance: 120,\r\n    },\r\n    effects: [localStorageEffect(\"Dots\")],\r\n});\r\n\r\nconst useDotsAtom = () => {\r\n    const [dots, setDots] = useRecoilState(dotsAtom);\r\n\r\n    const setCurve = setProperty(setDots, \"curve\");\r\n    const setSpeed = setProperty(setDots, \"speed\");\r\n    const setCount = setProperty(setDots, \"count\");\r\n    const setShowDots = setProperty(setDots, \"showDots\");\r\n    const setShowGrid = setProperty(setDots, \"showGrid\");\r\n    const setMaxDistance = setProperty(setDots, \"maxDistance\");\r\n\r\n    return {\r\n        dots,\r\n        setCurve,\r\n        setSpeed,\r\n        setCount,\r\n        setShowDots,\r\n        setShowGrid,\r\n        setMaxDistance,\r\n    };\r\n};\r\n\r\nexport { dotsAtom };\r\nexport default useDotsAtom;\r\n","import SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\nimport SettingsCheckbox from \"../../menu/sharedComponents/settingsCheckbox\";\r\n\r\nimport useDotsAtom from \"./atom\";\r\n\r\nconst Dots = () => {\r\n    const { dots, setCurve, setSpeed, setCount, setShowDots, setShowGrid, setMaxDistance } = useDotsAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={dots.speed}\r\n                label={\"Speed - \" + dots.speed + \" pixels/s\"}\r\n                min={1}\r\n                max={50}\r\n                step={1}\r\n                onChange={(value) => setSpeed(value)}\r\n            />\r\n            <SettingsSlider\r\n                value={dots.count}\r\n                label={\"Count - \" + dots.count}\r\n                min={0}\r\n                max={250}\r\n                step={1}\r\n                onChange={(value) => setCount(value)}\r\n            />\r\n            <SettingsSlider\r\n                value={dots.maxDistance}\r\n                label={\"Max distance - \" + dots.maxDistance + \" pixels\"}\r\n                min={100}\r\n                max={200}\r\n                step={1}\r\n                onChange={(value) => setMaxDistance(value)}\r\n            />\r\n            <SettingsSlider\r\n                value={dots.curve}\r\n                label={\"Curvature\"}\r\n                min={0}\r\n                max={300}\r\n                step={1}\r\n                onChange={(value) => setCurve(value)}\r\n            />\r\n            <SettingsCheckbox value={dots.showDots} label={\"Show Dots\"} onChange={(value) => setShowDots(value)} />\r\n            <SettingsCheckbox value={dots.showGrid} label={\"Show Grid\"} onChange={(value) => setShowGrid(value)} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dots;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nconst gradientAtom = atom({\r\n    key: \"Gradient\",\r\n    default: {\r\n        speed: 100,\r\n        rotation: (Math.PI * 5) / 8, //radians\r\n    },\r\n    effects: [localStorageEffect(\"Gradient\")],\r\n});\r\n\r\nconst useGradientAtom = () => {\r\n    const [gradient, setGradient] = useRecoilState(gradientAtom);\r\n\r\n    const setSpeed = setProperty(setGradient, \"speed\");\r\n    const setRotation = setProperty(setGradient, \"rotation\");\r\n\r\n    return {\r\n        gradient,\r\n        setSpeed,\r\n        setRotation,\r\n    };\r\n};\r\n\r\nexport { gradientAtom };\r\nexport default useGradientAtom;\r\n","import ColorsList from \"../../menu/sharedComponents/colorsAdder\";\r\nimport SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\n\r\nimport useGradientAtom from \"./atom\";\r\n\r\nconst getRotationLabel = (angle) => {\r\n    return `${angle.toFixed(2)} rad / ${((angle * 180) / Math.PI).toFixed(2)} degrees`;\r\n};\r\n\r\nconst Gradient = () => {\r\n    const { gradient, setSpeed, setRotation } = useGradientAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={gradient.speed}\r\n                label={\"Speed\"}\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                onChange={(value) => setSpeed(value)}\r\n                color={gradient.speed > 20 ? \"auto\" : \"red\"}\r\n            />\r\n            <SettingsSlider\r\n                value={gradient.rotation}\r\n                label={\"Rotation - \" + getRotationLabel(gradient.rotation)}\r\n                min={0}\r\n                max={Math.PI * 2}\r\n                step={0.01}\r\n                onChange={(value) => setRotation(value)}\r\n            />\r\n            <ColorsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Gradient;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst ImageUpload = ({ onChange }) => {\r\n    const [imgURL, setImgURL] = useState(null);\r\n\r\n    const uploadInputRef = useRef(null);\r\n\r\n    const openDialog = () => {\r\n        uploadInputRef.current && uploadInputRef.current.click();\r\n    };\r\n\r\n    const fileUploaded = ({ target }) => {\r\n        let newImage = target.files[0];\r\n        let newUrl = URL.createObjectURL(newImage);\r\n        if (imgURL !== null) {\r\n            URL.revokeObjectURL(imgURL);\r\n        }\r\n        setImgURL(newUrl);\r\n        onChange(newUrl);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input ref={uploadInputRef} type=\"file\" accept=\"image/*\" onChange={fileUploaded} hidden />\r\n            <Button onClick={openDialog} variant=\"outlined\">\r\n                Upload image\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;\r\n","export default __webpack_public_path__ + \"static/media/city.ea63c51b.jpg\";","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nimport City from \"../../content/city.jpg\";\r\n\r\nconst imageAtom = atom({\r\n    key: \"Image\",\r\n    default: {\r\n        imageUrl: City,\r\n        speedX: -3,\r\n        speedY: 0,\r\n        scale: true,\r\n        clampX: false,\r\n        clampY: false,\r\n    },\r\n    effects: [localStorageEffect(\"Image\")],\r\n});\r\n\r\nconst useImageAtom = () => {\r\n    const [image, setImage] = useRecoilState(imageAtom);\r\n\r\n    const setImageUrl = setProperty(setImage, \"imageUrl\");\r\n    const setSpeedX = setProperty(setImage, \"speedX\");\r\n    const setSpeedY = setProperty(setImage, \"speedY\");\r\n    const setScale = setProperty(setImage, \"scale\");\r\n    const setClampX = setProperty(setImage, \"clampX\");\r\n    const setClampY = setProperty(setImage, \"clampY\");\r\n\r\n    return {\r\n        image,\r\n        setImageUrl,\r\n        setSpeedX,\r\n        setSpeedY,\r\n        setScale,\r\n        setClampX,\r\n        setClampY,\r\n    };\r\n};\r\n\r\nexport { imageAtom };\r\nexport default useImageAtom;\r\n","import SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\nimport SettingsCheckbox from \"../../menu/sharedComponents/settingsCheckbox\";\r\n\r\nimport ImageUpload from \"../../menu/sharedComponents/imageUpload\";\r\n\r\nimport useImageAtom from \"./atom\";\r\n\r\nconst Image = () => {\r\n    const { image, setImageUrl, setSpeedX, setSpeedY, setScale, setClampX, setClampY } = useImageAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={image.speedX}\r\n                label={\"SpeedX \" + image.speedX}\r\n                min={-10}\r\n                max={10}\r\n                step={1}\r\n                onChange={(value) => setSpeedX(value)}\r\n            />\r\n            <SettingsSlider\r\n                value={image.speedY}\r\n                label={\"SpeedY \" + image.speedY}\r\n                min={-10}\r\n                max={10}\r\n                step={1}\r\n                onChange={(value) => setSpeedY(value)}\r\n            />\r\n            <SettingsCheckbox value={image.scale} label={\"Scale to fit\"} onChange={(value) => setScale(value)} />\r\n            <SettingsCheckbox value={image.clampX} label={\"Clamp X\"} onChange={(value) => setClampX(value)} />\r\n            <SettingsCheckbox value={image.clampY} label={\"Clamp Y\"} onChange={(value) => setClampY(value)} />\r\n            <ImageUpload onChange={(newUrl) => setImageUrl(newUrl)} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Image;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nimport City from \"../../content/city.jpg\";\r\n\r\nconst particlesAtom = atom({\r\n    key: \"Particles\",\r\n    default: {\r\n        imageUrl: City,\r\n        speed: 1,\r\n        scale: true,\r\n    },\r\n    effects: [localStorageEffect(\"Particles\")],\r\n});\r\n\r\nconst useParticlesAtom = () => {\r\n    const [particles, setParticles] = useRecoilState(particlesAtom);\r\n\r\n    const setImageUrl = setProperty(setParticles, \"imageUrl\");\r\n    const setSpeed = setProperty(setParticles, \"speed\");\r\n    const setScale = setProperty(setParticles, \"scale\");\r\n\r\n    return {\r\n        particles,\r\n        setImageUrl,\r\n        setSpeed,\r\n        setScale,\r\n    };\r\n};\r\n\r\nexport { particlesAtom };\r\nexport default useParticlesAtom;\r\n","import SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\nimport SettingsCheckbox from \"../../menu/sharedComponents/settingsCheckbox\";\r\n\r\nimport ImageUpload from \"../../menu/sharedComponents/imageUpload\";\r\n\r\nimport particlesAtom from \"./atom\";\r\n\r\nconst Particles = () => {\r\n    const { particles, setImageUrl, setSpeed, setScale } = particlesAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={particles.speed}\r\n                label={\"SpeedX \" + particles.speed}\r\n                min={-10}\r\n                max={10}\r\n                step={1}\r\n                onChange={(value) => setSpeed(value)}\r\n            />\r\n            <SettingsCheckbox value={particles.scale} label={\"Scale to fit\"} onChange={(value) => setScale(value)} />\r\n            <ImageUpload onChange={(newUrl) => setImageUrl(newUrl)} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Particles;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nconst radialAtom = atom({\r\n    key: \"Radial\",\r\n    default: {\r\n        speed: 100,\r\n    },\r\n    effects: [localStorageEffect(\"Radial\")],\r\n});\r\n\r\nconst useRadialAtom = () => {\r\n    const [radial, setRadial] = useRecoilState(radialAtom);\r\n\r\n    const setSpeed = setProperty(setRadial, \"speed\");\r\n\r\n    return {\r\n        radial,\r\n        setSpeed,\r\n    };\r\n};\r\n\r\nexport { radialAtom };\r\nexport default useRadialAtom;\r\n","import SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\nimport ColorsList from \"../../menu/sharedComponents/colorsAdder\";\r\n\r\nimport useRadialAtom from \"./atom\";\r\n\r\nconst Radial = () => {\r\n    const { radial, setSpeed } = useRadialAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={radial.speed}\r\n                label={\"Speed\"}\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                onChange={setSpeed}\r\n                color={radial.speed > 20 ? \"auto\" : \"red\"}\r\n            />\r\n            <ColorsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Radial;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"../../atoms/helper\";\r\n\r\nconst synthAtom = atom({\r\n    key: \"Synth\",\r\n    default: {\r\n        floorHeight: 3 / 4, // 0..1\r\n        numberOfLines: 30,\r\n    },\r\n    effects: [localStorageEffect(\"Synth\")],\r\n});\r\n\r\nconst useSynthAtom = () => {\r\n    const [synth, setSynth] = useRecoilState(synthAtom);\r\n\r\n    const setFloorHeight = setProperty(setSynth, \"floorHeight\");\r\n    const setNumberOfLines = setProperty(setSynth, \"numberOfLines\");\r\n\r\n    return {\r\n        synth,\r\n        setFloorHeight,\r\n        setNumberOfLines,\r\n    };\r\n};\r\n\r\nexport { synthAtom };\r\nexport default useSynthAtom;\r\n","import SettingsSlider from \"../../menu/sharedComponents/settingsSlider\";\r\nimport useSynthAtom from \"./atom\";\r\n\r\nconst Synthwave = () => {\r\n    const { synth, setFloorHeight, setNumberOfLines } = useSynthAtom();\r\n\r\n    return (\r\n        <>\r\n            <SettingsSlider\r\n                value={synth.floorHeight * 100}\r\n                label={\"Floor height: \" + (synth.floorHeight * 100).toFixed(0)}\r\n                min={30}\r\n                max={85}\r\n                step={1}\r\n                onChange={(newValue) => setFloorHeight(newValue / 100)}\r\n            />\r\n            <SettingsSlider\r\n                value={synth.numberOfLines}\r\n                label={\"Number of lines: \" + synth.numberOfLines}\r\n                min={20}\r\n                max={60}\r\n                step={1}\r\n                onChange={(newValue) => setNumberOfLines(newValue)}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Synthwave;\r\n","import Blinking from \"../displayModes/Blinking/menu\";\r\nimport Dots from \"../displayModes/Dots/menu\";\r\nimport Gradient from \"../displayModes/Gradient/menu\";\r\nimport Image from \"../displayModes/Image/menu\";\r\nimport Particles from \"../displayModes/Particles/menu\";\r\nimport Radial from \"../displayModes/Radial/menu\";\r\nimport Synthwave from \"../displayModes/Synthwave/menu\";\r\n\r\nconst Modes = [\r\n    {\r\n        name: \"Dots\",\r\n        component: <Dots />,\r\n    },\r\n    {\r\n        name: \"Blinking\",\r\n        component: <Blinking />,\r\n    },\r\n    {\r\n        name: \"Gradient\",\r\n        component: <Gradient />,\r\n    },\r\n    {\r\n        name: \"Image\",\r\n        component: <Image />,\r\n    },\r\n    {\r\n        name: \"Radial\",\r\n        component: <Radial />,\r\n    },\r\n    {\r\n        name: \"Synthwave\",\r\n        component: <Synthwave />,\r\n    },\r\n    {\r\n        name: \"Particles\",\r\n        component: <Particles />,\r\n    },\r\n];\r\n\r\nexport default Modes;\r\n","import { atom, useRecoilState } from \"recoil\";\r\nimport { setProperty, localStorageEffect } from \"./helper\";\r\n\r\nconst configAtom = atom({\r\n    key: \"Config\",\r\n    default: {\r\n        mode: \"Synthwave\",\r\n        debug: false,\r\n    },\r\n    effects: [localStorageEffect(\"Config\")],\r\n});\r\n\r\nconst useConfigAtom = () => {\r\n    const [config, setConfig] = useRecoilState(configAtom);\r\n\r\n    const setMode = setProperty(setConfig, \"mode\");\r\n    const setDebug = setProperty(setConfig, \"debug\");\r\n\r\n    return {\r\n        config,\r\n        setMode,\r\n        setDebug,\r\n    };\r\n};\r\n\r\nexport default useConfigAtom;\r\n","import React from \"react\";\r\n\r\nimport { Grid, FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\r\n\r\nimport Modes from \"./modesMenu\";\r\n\r\nimport useConfigAtom from \"../atoms/config\";\r\n\r\nconst Mode = () => {\r\n    const { config, setMode } = useConfigAtom();\r\n    const changeMode = ({ target }) => setMode(target.value);\r\n\r\n    return (\r\n        <>\r\n            <Grid item mb={1}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Display mode</InputLabel>\r\n                    <Select value={config.mode} label=\"Display mode\" onChange={changeMode}>\r\n                        {Modes.map((mode) => (\r\n                            <MenuItem key={mode.name} value={mode.name}>\r\n                                {mode.name}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            {Modes.find((mode) => mode.name === config.mode).component}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mode;\r\n","import React from \"react\";\r\n\r\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay\";\r\n\r\nimport Mode from \"./modeSelector\";\r\nimport { useResetAllAtoms } from \"../atoms/resetAtoms\";\r\n\r\nconst SettingsContainer = () => {\r\n    const resetStates = useResetAllAtoms();\r\n\r\n    return (\r\n        <Grid container spacing={2} sx={{ padding: 2 }}>\r\n            <Grid container item direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Typography gutterBottom variant=\"h5\" mb={0} mr={1}>\r\n                    Settings\r\n                </Typography>\r\n                <Tooltip title=\"Reset Settings\" placement=\"right\" arrow>\r\n                    <IconButton pb={5} onClick={resetStates}>\r\n                        <ReplayIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n\r\n            <Grid container item direction=\"column\">\r\n                <Mode />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SettingsContainer;\r\n","import { useResetRecoilState } from \"recoil\";\r\n\r\nimport { blinkingAtom } from \"../displayModes/Blinking/atom\";\r\nimport { dotsAtom } from \"../displayModes/Dots/atom\";\r\nimport { gradientAtom } from \"../displayModes/Gradient/atom\";\r\nimport { imageAtom } from \"../displayModes/Image/atom\";\r\nimport { particlesAtom } from \"../displayModes/Particles/atom\";\r\nimport { radialAtom } from \"../displayModes/Radial/atom\";\r\nimport { synthAtom } from \"../displayModes/Synthwave/atom\";\r\nimport { colorsAtom } from \"./colors\";\r\n\r\nconst useResetAllAtoms = () => {\r\n    const resetBlinking = useResetRecoilState(blinkingAtom);\r\n    const resetDots = useResetRecoilState(dotsAtom);\r\n    const resetGradient = useResetRecoilState(gradientAtom);\r\n    const resetImage = useResetRecoilState(imageAtom);\r\n    const resetParticles = useResetRecoilState(particlesAtom);\r\n    const resetRadial = useResetRecoilState(radialAtom);\r\n    const resetSynth = useResetRecoilState(synthAtom);\r\n\r\n    const resetColors = useResetRecoilState(colorsAtom);\r\n\r\n    const resetAll = () => {\r\n        resetBlinking();\r\n        resetDots();\r\n        resetGradient();\r\n        resetImage();\r\n        resetParticles();\r\n        resetRadial();\r\n        resetSynth();\r\n        resetColors();\r\n    };\r\n\r\n    return resetAll;\r\n};\r\n\r\nexport { useResetAllAtoms };\r\n","import React from \"react\";\r\nimport { Box, Slide } from \"@mui/material\";\r\n\r\nimport SettingsContainer from \"./SettingsContainer\";\r\n\r\nconst SettingsOverlay = () => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                position: \"absolute\",\r\n                top: 7,\r\n                left: 7,\r\n                width: \"100%\",\r\n                maxWidth: 350,\r\n                backgroundColor: \"#101020a0\",\r\n                borderRadius: 3,\r\n            }}\r\n        >\r\n            <SettingsContainer />\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst SettingsRef = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div ref={ref} {...props}>\r\n            <SettingsOverlay />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AnimatedSettingsOverlay = ({ active }) => {\r\n    return (\r\n        <Slide\r\n            timeout={{ enter: 3e2, exit: 1e3 }}\r\n            easing={{ enter: \"cubic-bezier(0, 0.5, 1, 1)\" }}\r\n            direction=\"right\"\r\n            in={active}\r\n            appear={false}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <SettingsRef />\r\n        </Slide>\r\n    );\r\n};\r\n\r\nexport { AnimatedSettingsOverlay };\r\nexport default SettingsOverlay;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n    });\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import useConfigAtom from \"../../atoms/config\";\r\nimport useColorsAtom from \"../../atoms/colors\";\r\nimport useBlinkingAtom from \"../../displayModes/Blinking/atom\";\r\nimport useDotsAtom from \"../../displayModes/Dots/atom\";\r\nimport useGradientAtom from \"../../displayModes/Gradient/atom\";\r\nimport useImageAtom from \"../../displayModes/Image/atom\";\r\nimport useParticlesAtom from \"../../displayModes/Particles/atom\";\r\nimport useRadialAtom from \"../../displayModes/Radial/atom\";\r\nimport useSynthAtom from \"../../displayModes/Synthwave/atom\";\r\n\r\nconst useStorage = () => {\r\n    const { config } = useConfigAtom();\r\n    const { colors } = useColorsAtom();\r\n\r\n    const { blinking } = useBlinkingAtom();\r\n    const { dots } = useDotsAtom();\r\n    const { gradient } = useGradientAtom();\r\n    const { image } = useImageAtom();\r\n    const { particles } = useParticlesAtom();\r\n    const { radial } = useRadialAtom();\r\n    const { synth } = useSynthAtom();\r\n\r\n    return { config, colors, blinking, dots, gradient, image, particles, radial, synth };\r\n};\r\n\r\nexport default useStorage;\r\n","import { useRef, useEffect } from \"react\";\r\nimport useStorage from \"./useStorage\";\r\n\r\nlet frameCount = 0;\r\nconst useCanvas = (draw) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    const storage = useStorage();\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        let animationFrameId;\r\n\r\n        const render = () => {\r\n            frameCount++;\r\n            draw(context, frameCount, storage);\r\n            animationFrameId = window.requestAnimationFrame(render);\r\n        };\r\n        render();\r\n\r\n        return () => window.cancelAnimationFrame(animationFrameId);\r\n    }, [draw, storage]);\r\n\r\n    return canvasRef;\r\n};\r\n\r\nexport default useCanvas;\r\n","const getRealRadius = (canvas) => Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2;\r\n\r\nconst getColorStopWidth = (radius, colors) => (radius * 2) / colors.length;\r\n\r\nconst getSpeed = (frameCount, speed) => (frameCount / speed) * 1.5;\r\n\r\nconst getRadius = (canvas, colors) => {\r\n    //circumscribed circle around canvas rectangle\r\n    const realRadius = getRealRadius(canvas);\r\n\r\n    //how much space one color takes up\r\n    const colorStopWidth = getColorStopWidth(realRadius, colors);\r\n\r\n    return realRadius + colorStopWidth;\r\n};\r\n\r\nconst addColorStops = (gradient, speed, colors) => {\r\n    for (let i = 0; i < colors.length; i++) {\r\n        const colorOffset = ((i + speed) % colors.length) / colors.length;\r\n        gradient.addColorStop(colorOffset, colors[i]);\r\n    }\r\n    return gradient;\r\n};\r\n\r\nexport { getRealRadius, getColorStopWidth, getSpeed, addColorStops, getRadius };\r\n","import { getRealRadius, getColorStopWidth, getSpeed, addColorStops } from \"../../display/drawing/GradientFactory\";\r\n\r\nconst getRadius = (canvas, colors) => {\r\n    let realRadius = getRealRadius(canvas);\r\n    let colorStopWidth = getColorStopWidth(realRadius, colors);\r\n    return realRadius * colorStopWidth;\r\n};\r\n\r\nconst getGradient = (context, radius) => {\r\n    const canvas = context.canvas;\r\n    const x1 = canvas.width / 2 - radius;\r\n    const y1 = canvas.height / 2;\r\n    const x2 = canvas.width;\r\n    const y2 = canvas.height / 2 + radius;\r\n    return context.createLinearGradient(x1, y1, x2, y2);\r\n};\r\n\r\nconst createBlinking = (context, storage, frameCount) => {\r\n    const canvas = context.canvas;\r\n    const radius = getRadius(canvas, storage.colors);\r\n    const gradient = getGradient(context, radius);\r\n    const speed = getSpeed(frameCount, storage.blinking.speed);\r\n\r\n    return addColorStops(gradient, speed, storage.colors);\r\n};\r\n\r\nconst updateBlinking = (context, storage, frameCount) => {\r\n    context.fillStyle = createBlinking(context, storage, frameCount);\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n};\r\n\r\nexport { updateBlinking };\r\n","class Vector2 {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(vector2) {\r\n        this.x += vector2.x;\r\n        this.y += vector2.y;\r\n    }\r\n\r\n    limit(canvas) {\r\n        this.x = (this.x + canvas.width) % canvas.width;\r\n        this.y = (this.y + canvas.height) % canvas.height;\r\n    }\r\n}\r\n\r\nexport default Vector2;\r\n","import Vector2 from \"./Vector2\";\r\n\r\nclass Dot {\r\n    constructor(x, y, color) {\r\n        this.pos = new Vector2(x, y);\r\n        this.vel = new Vector2(0, 0);\r\n\r\n        this.angle = Math.random() * Math.PI * 2;\r\n\r\n        this.setVelocity(50);\r\n        this.color = color || \"#000000\";\r\n    }\r\n\r\n    // speed - pixels per second\r\n    setVelocity(speed) {\r\n        speed /= 1000 / 60;\r\n        this.vel.x = speed * Math.cos(this.angle);\r\n        this.vel.y = speed * Math.sin(this.angle);\r\n    }\r\n\r\n    getBezier(curve) {\r\n        let x = this.pos.x + curve * Math.cos(this.angle);\r\n        let y = this.pos.y + curve * Math.sin(this.angle);\r\n        return [x, y];\r\n    }\r\n\r\n    update(canvas) {\r\n        this.pos.add(this.vel);\r\n        this.pos.limit(canvas);\r\n    }\r\n\r\n    render(context) {\r\n        context.fillStyle = this.color;\r\n\r\n        context.beginPath();\r\n        context.arc(this.pos.x, this.pos.y, 4, 0, 2 * Math.PI);\r\n        context.fill();\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    let r, g, b;\r\n\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        default:\r\n        case 0: {\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 1: {\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        }\r\n        case 2: {\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        }\r\n        case 3: {\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 4: {\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        }\r\n        case 5: {\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        }\r\n    }\r\n\r\n    let get = (num) => {\r\n        let res = Math.floor(num).toString(16);\r\n        if (res.length < 2) res = \"0\" + res;\r\n        return res;\r\n    };\r\n\r\n    return \"#\" + get(r * 255) + get(g * 255) + get(b * 255);\r\n}\r\n\r\nconst createDot = (canv) => {\r\n    return new Dot(canv.width * Math.random(), canv.height * Math.random(), hsvToRgb(Math.random(), 1, 1));\r\n};\r\n\r\nexport { createDot };\r\n","class Cell {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.dots = [];\r\n    }\r\n\r\n    intersects(point) {\r\n        return (\r\n            point.x >= this.x && point.y >= this.y && point.x < this.x + this.width && point.y < this.y + this.height\r\n        );\r\n    }\r\n}\r\n\r\nclass Grid {\r\n    constructor(canvas, maxDistance) {\r\n        this.cells = [];\r\n        this.maxDistance = (maxDistance / 1.5) * Math.sqrt(2);\r\n\r\n        this.rows = 0;\r\n        this.columns = 0;\r\n\r\n        this.init(canvas);\r\n    }\r\n\r\n    init(canvas) {\r\n        this.cells = [];\r\n        this.columns = Math.ceil(canvas.width / this.maxDistance); // X\r\n        this.rows = Math.ceil(canvas.height / this.maxDistance); // Y\r\n        for (let i = 0; i < this.rows * this.columns; i++) {\r\n            let x = (i % this.columns) * this.maxDistance;\r\n            let y = Math.floor(i / this.columns) * this.maxDistance;\r\n            let width = Math.min(x + this.maxDistance, canvas.width) - x;\r\n            let height = Math.min(y + this.maxDistance, canvas.height) - y;\r\n            this.cells.push(new Cell(x, y, width, height));\r\n        }\r\n    }\r\n\r\n    populate(dots) {\r\n        for (const dot of dots) {\r\n            this.addDot(dot);\r\n        }\r\n    }\r\n\r\n    addDot(dot) {\r\n        let x = Math.floor(dot.pos.x / this.maxDistance);\r\n        let y = Math.floor(dot.pos.y / this.maxDistance);\r\n        let cell = this.cells[y * this.columns + x];\r\n        if (!cell) {\r\n            console.error(\"Dot did not get populated. Could not find a cell.\", dot, y, x);\r\n        } else {\r\n            cell.dots.push(dot);\r\n        }\r\n    }\r\n\r\n    removeDot(dot) {\r\n        let cell = this.getCell(Math.floor(dot.pos.x / this.maxDistance), Math.floor(dot.pos.y / this.maxDistance));\r\n        cell.dots.splice(cell.dots.indexOf(dot), 1);\r\n    }\r\n\r\n    getCell(x, y) {\r\n        return this.cells[y * this.columns + x];\r\n    }\r\n\r\n    getCoordsByIndex(index) {\r\n        return { x: index % this.columns, y: Math.floor(index / this.columns) };\r\n    }\r\n\r\n    getCellNeighbours(index) {\r\n        /*\r\n            [ ][ ][*]\r\n            [ ][x][*]\r\n            [ ][*][*]\r\n        */\r\n        let { x, y } = this.getCoordsByIndex(index);\r\n        let cells = [];\r\n        let xBoundary = x + 1 < this.columns;\r\n        let yBoundary = y + 1 < this.rows;\r\n        if (xBoundary) {\r\n            cells.push(this.getCell(x + 1, y));\r\n            if (y > 0) cells.push(this.getCell(x + 1, y - 1));\r\n        }\r\n        if (yBoundary) {\r\n            cells.push(this.getCell(x, y + 1));\r\n        }\r\n        if (xBoundary && yBoundary) {\r\n            cells.push(this.getCell(x + 1, y + 1));\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.cells.length; i++) {\r\n            let cell = this.cells[i];\r\n\r\n            for (let j = 0; j < cell.dots.length; j++) {\r\n                let dot = cell.dots[j];\r\n                if (!cell.intersects(dot.pos)) {\r\n                    cell.dots.splice(cell.dots.indexOf(dot), 1);\r\n                    this.addDot(dot);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import { createDot } from \"./helpers/Dot\";\r\nimport Grid from \"./helpers/Grid\";\r\n\r\nlet Dots = [];\r\nlet grid = null;\r\n\r\nconst updateCount = (context, dots) => {\r\n    if (Dots.length > dots.count) {\r\n        for (let i = Dots.length - 1; i > dots.count - 1; i--) {\r\n            grid.removeDot(Dots[i]);\r\n        }\r\n        Dots.length = dots.count;\r\n    } else {\r\n        for (let i = Dots.length; i < dots.count; i++) {\r\n            const dot = createDot(context.canvas);\r\n            Dots.push(dot);\r\n            if (grid !== null) grid.addDot(dot);\r\n        }\r\n    }\r\n};\r\n\r\nconst connectDots = (context, dot1, dot2, maxDistance, curve) => {\r\n    let distance = Math.sqrt((dot2.pos.x - dot1.pos.x) ** 2 + (dot2.pos.y - dot1.pos.y) ** 2);\r\n\r\n    if (distance > maxDistance) {\r\n        /*\r\n            I have been debugging for hours.\r\n            I have no clue why or how.\r\n            But sometimes. Very very rarely.\r\n            When point jumps across the screen.\r\n            It's position is clearly on the other side of the screen.\r\n            But it is contained within previous cell.\r\n            I have no idea how it is possible. Because points update their location\r\n            and then cells check if all dots are still within their boundaries.\r\n            But it happens. Fixes itself next render.\r\n            I want to cry now.\r\n        */\r\n        return;\r\n    }\r\n\r\n    let alpha = Math.floor(255 - (255 * distance) / maxDistance)\r\n        .toString(16)\r\n        .padStart(2, \"0\");\r\n    let color = context.createLinearGradient(dot1.pos.x, dot1.pos.y, dot2.pos.x, dot2.pos.y);\r\n    color.addColorStop(0, dot1.color + alpha);\r\n    color.addColorStop(1, dot2.color + alpha);\r\n    context.strokeStyle = color;\r\n    context.lineWidth = (1 - distance / maxDistance + 0.2) * 4;\r\n    context.lineCap = \"round\";\r\n    if (curve) {\r\n        connectDotsCurved(context, dot1, dot2, distance, maxDistance, curve);\r\n    } else {\r\n        connectDotsLine(context, dot1, dot2);\r\n    }\r\n};\r\n\r\nconst connectDotsLine = (context, dot1, dot2) => {\r\n    context.beginPath();\r\n    context.moveTo(dot1.pos.x, dot1.pos.y);\r\n    context.lineTo(dot2.pos.x, dot2.pos.y);\r\n    context.stroke();\r\n};\r\n\r\nconst connectDotsCurved = (context, dot1, dot2, distance, maxDistance, curve) => {\r\n    context.beginPath();\r\n    context.moveTo(dot1.pos.x, dot1.pos.y);\r\n    context.bezierCurveTo(\r\n        ...dot1.getBezier((distance / maxDistance) * curve),\r\n        ...dot2.getBezier((distance / maxDistance) * curve),\r\n        dot2.pos.x,\r\n        dot2.pos.y\r\n    );\r\n    context.stroke();\r\n};\r\n\r\nconst connectNew = (context, maxDistance, curve) => {\r\n    for (let i = 0; i < grid.cells.length; i++) {\r\n        const cell = grid.cells[i];\r\n        const neighbours = grid.getCellNeighbours(i);\r\n\r\n        for (let j = 0; j < cell.dots.length; j++) {\r\n            let dot1 = cell.dots[j];\r\n            // within itself\r\n            for (let k = j; k < cell.dots.length; k++) {\r\n                let dot2 = cell.dots[k];\r\n                connectDots(context, dot1, dot2, maxDistance, curve);\r\n            }\r\n\r\n            // outside itself\r\n            for (let k = 0; k < neighbours.length; k++) {\r\n                let neighbour = neighbours[k];\r\n                for (let z = 0; z < neighbour.dots.length; z++) {\r\n                    let dot2 = neighbour.dots[z];\r\n                    connectDots(context, dot1, dot2, maxDistance, curve);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nlet lastSpeed = 0;\r\nlet lastDistance = 0;\r\nconst updateProperties = (context, dots, needsUpdate) => {\r\n    if (Dots.length !== dots.count) {\r\n        updateCount(context, dots);\r\n    }\r\n\r\n    if (lastSpeed !== dots.speed) {\r\n        Dots.map((dot) => dot.setVelocity(dots.speed));\r\n        lastSpeed = dots.speed;\r\n    }\r\n\r\n    if (needsUpdate || lastDistance !== dots.maxDistance) {\r\n        grid = new Grid(context.canvas, dots.maxDistance);\r\n        grid.populate(Dots);\r\n        lastDistance = dots.maxDistance;\r\n    }\r\n};\r\n\r\nconst updateDots = (context, storage, frameCount, needsUpdate) => {\r\n    const dots = storage.dots;\r\n    updateProperties(context, dots, needsUpdate);\r\n\r\n    context.fillStyle = \"#000\";\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    //dots\r\n    for (const dot of Dots) {\r\n        dot.update(context.canvas);\r\n        if (dots.showDots) dot.render(context);\r\n    }\r\n\r\n    grid.update();\r\n\r\n    //grid\r\n    if (dots.showGrid) {\r\n        for (let i = 0; i < grid.cells.length; i++) {\r\n            let { x, y, width, height } = grid.cells[i];\r\n            context.lineWidth = 2;\r\n            context.strokeStyle = \"red\";\r\n            context.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    //lines\r\n    context.fillStyle = \"#000000\";\r\n    context.lineWidth = 2;\r\n    connectNew(context, dots.maxDistance, dots.curve);\r\n};\r\n\r\nexport { updateDots };\r\n","import { getRadius, addColorStops, getSpeed } from \"../../display/drawing/GradientFactory\";\r\n\r\nconst getLinearGradient = (context, rotation, radius) => {\r\n    const canvas = context.canvas;\r\n    //calculate location of points on a circle based on rotation\r\n    const x1 = Math.cos(-rotation + Math.PI) * radius + canvas.width / 2;\r\n    const y1 = Math.sin(-rotation + Math.PI) * radius + canvas.height / 2;\r\n    const x2 = Math.cos(-rotation) * radius + canvas.width / 2;\r\n    const y2 = Math.sin(-rotation) * radius + canvas.height / 2;\r\n\r\n    return context.createLinearGradient(x1, y1, x2, y2);\r\n};\r\n\r\n//fix: Transition between colors is flickering when there are only few colors\r\nconst createGradient = (context, storage, frameCount) => {\r\n    const canvas = context.canvas;\r\n    const radius = getRadius(canvas, storage.colors);\r\n    const gradient = getLinearGradient(context, storage.gradient.rotation, radius);\r\n    const speed = getSpeed(frameCount, storage.gradient.speed);\r\n\r\n    return addColorStops(gradient, speed, storage.colors);\r\n};\r\n\r\nconst updateGradient = (context, storage, frameCount) => {\r\n    context.fillStyle = createGradient(context, storage, frameCount);\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n};\r\n\r\nexport { updateGradient };\r\n","let pattern = null;\r\nconst updatePattern = (context, image) => {\r\n    console.log(\"new pattern\");\r\n    pattern = context.createPattern(image, \"repeat\");\r\n};\r\n\r\nlet image = new Image();\r\n\r\nlet offsetX = 0;\r\nlet offsetY = 0;\r\n\r\nlet scalingX = 1;\r\nlet scalingY = 1;\r\n\r\nconst draw = (context, { speedX, speedY, scale, clampX, clampY }) => {\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.fillStyle = pattern;\r\n\r\n    if (speedX) {\r\n        offsetX += speedX;\r\n        //offsetX %= context.canvas.width;\r\n    }\r\n    if (speedY) {\r\n        offsetY += speedY;\r\n        //offsetY %= context.canvas.height;\r\n    }\r\n\r\n    if (scale) {\r\n        if (context.canvas.width <= image.width) {\r\n            if (clampX) {\r\n                scalingX = image.width / context.canvas.width;\r\n            } else {\r\n                scalingX = 1;\r\n            }\r\n        } else {\r\n            scalingX = context.canvas.width / image.width;\r\n        }\r\n        if (context.canvas.height <= image.height) {\r\n            if (clampY) {\r\n                scalingY = image.height / context.canvas.height;\r\n            } else {\r\n                scalingY = 1;\r\n            }\r\n        } else {\r\n            scalingY = context.canvas.height / image.height;\r\n        }\r\n        context.setTransform(scalingX, 0, 0, scalingY, offsetX, offsetY);\r\n        context.fillRect(-offsetX / scalingX, -offsetY / scalingY, context.canvas.width, context.canvas.height);\r\n        context.resetTransform();\r\n    } else {\r\n        context.translate(offsetX, offsetY);\r\n        context.fillRect(-offsetX, -offsetY, context.canvas.width, context.canvas.height);\r\n        context.translate(-offsetX, -offsetY);\r\n    }\r\n};\r\n\r\nlet prevURL = \"\";\r\nconst updateImage = (context, storage) => {\r\n    const { imageUrl, ...args } = storage.image;\r\n    if (imageUrl !== prevURL) {\r\n        image = new Image(); // could be removed?\r\n        image.onload = () => {\r\n            updatePattern(context, image);\r\n        };\r\n        image.src = imageUrl;\r\n        prevURL = imageUrl;\r\n    }\r\n\r\n    if (pattern !== null) {\r\n        draw(context, args);\r\n    }\r\n};\r\n\r\nexport { updateImage };\r\n","const createGradient = (context, canvas, floorHeight) => {\r\n    const grad = context.createLinearGradient(canvas.width / 2, floorHeight, canvas.width / 2, canvas.height);\r\n    grad.addColorStop(0, \"#C9B170\");\r\n    grad.addColorStop(0.5, \"#AE635F\");\r\n    grad.addColorStop(1, \"#BD0477\");\r\n    return grad;\r\n};\r\n\r\nconst drawLines = (context, canvas, offset, { floorHeight, amount, scaleX, scaleY }) => {\r\n    context.filter = \"blur(1px) drop-shadow(0px 0px 4px #BD0477)\";\r\n    context.lineWidth = 3;\r\n    context.beginPath();\r\n    for (let i = 0; i < amount; i++) {\r\n        let pixelOffset = -4 * (i / amount) + 1;\r\n        context.moveTo(pixelOffset + scaleX * i + scaleX * offset, floorHeight);\r\n\r\n        let x = scaleX * i * 2 - canvas.width / 2;\r\n        context.lineTo(pixelOffset + x + scaleX * 2 * offset, canvas.height);\r\n    }\r\n    context.stroke();\r\n\r\n    context.lineWidth = 2;\r\n    context.beginPath();\r\n    const height = (scaleY - floorHeight / amount) * 2;\r\n    for (let i = 0; i < amount / 2; i++) {\r\n        context.moveTo(0, floorHeight + height * i);\r\n        context.lineTo(canvas.width, floorHeight + height * i);\r\n    }\r\n    context.stroke();\r\n\r\n    context.filter = \"none\";\r\n};\r\n\r\nconst drawFloor = (context, canvas, store, frameCount) => {\r\n    const floorHeight = store.floorHeight * canvas.height;\r\n    const offset = (frameCount % 100) / 100;\r\n    const scaleX = canvas.width / store.numberOfLines;\r\n    const scaleY = canvas.height / store.numberOfLines;\r\n\r\n    context.fillStyle = \"#280A24\";\r\n    context.fillRect(0, floorHeight, canvas.width, canvas.height);\r\n\r\n    const grad = createGradient(context, canvas, floorHeight);\r\n\r\n    context.strokeStyle = grad;\r\n    drawLines(context, canvas, offset, { floorHeight, amount: store.numberOfLines, scaleX, scaleY });\r\n};\r\n\r\nexport { drawFloor };\r\n","const getBGGradient = (context, canvas) => {\r\n    const grad = context.createLinearGradient(canvas.width / 2, 0, canvas.width / 2, canvas.height);\r\n    grad.addColorStop(0, \"black\");\r\n    grad.addColorStop(0.05, \"#100284\");\r\n    grad.addColorStop(0.1, \"#1103AD\");\r\n    grad.addColorStop(0.4, \"#370CBC\");\r\n    grad.addColorStop(0.5, \"#4B11C4\");\r\n    grad.addColorStop(0.7, \"#841EDA\");\r\n    return grad;\r\n};\r\n\r\nconst getSunBox = (canvas, floorHeight) => {\r\n    const sunSize = canvas.width / 4;\r\n    return {\r\n        x: canvas.width / 2 - sunSize / 2,\r\n        y: floorHeight * (canvas.height - sunSize * 0.2) - sunSize / 2,\r\n        width: sunSize,\r\n        height: sunSize,\r\n    };\r\n};\r\n\r\nconst getSunGradient = (context, sunBox) => {\r\n    const grad = context.createLinearGradient(\r\n        sunBox.x + sunBox.width / 2,\r\n        sunBox.y,\r\n        sunBox.x + sunBox.width / 2,\r\n        sunBox.y + sunBox.height\r\n    );\r\n    grad.addColorStop(0, \"#EC07A8\");\r\n    grad.addColorStop(0.2, \"#F683A4\");\r\n    grad.addColorStop(0.4, \"#F683A4\");\r\n    grad.addColorStop(0.7, \"#FEF9D3\");\r\n    grad.addColorStop(1, \"#FEF9D3\");\r\n    return grad;\r\n};\r\nconst getSunHazeGradient = (context, sunBox, alpha = \"A0\") => {\r\n    const grad = context.createLinearGradient(\r\n        sunBox.x + sunBox.width / 2,\r\n        sunBox.y,\r\n        sunBox.x + sunBox.width / 2,\r\n        sunBox.y + sunBox.height\r\n    );\r\n    grad.addColorStop(0, \"#A9071F\" + alpha);\r\n    grad.addColorStop(0.2, \"#C81023\" + alpha);\r\n    grad.addColorStop(0.4, \"#CF002F\" + alpha);\r\n    grad.addColorStop(0.7, \"#E80358\" + alpha);\r\n    grad.addColorStop(1, \"#D2065D\" + alpha);\r\n    return grad;\r\n};\r\n\r\nconst drawSun = (context, sunBox) => {\r\n    context.filter = \"blur(3px)\";\r\n    context.fillStyle = getSunGradient(context, sunBox);\r\n    context.beginPath();\r\n    context.arc(sunBox.x + sunBox.width / 2, sunBox.y + sunBox.height / 2, sunBox.width / 2, 0, Math.PI * 2);\r\n    context.fill();\r\n    context.filter = \"none\";\r\n};\r\n\r\nconst drawSunLines = (context, sunBox, frameCount) => {\r\n    context.filter = \"blur(1px)\";\r\n    const maxLineGap = 30;\r\n    const offset = (frameCount % 100) / 100;\r\n    const gaps = 20;\r\n\r\n    for (let i = 0; i < gaps; i++) {\r\n        let y = i * maxLineGap + offset * maxLineGap;\r\n        let height = (y / sunBox.height) ** 2 * maxLineGap;\r\n        context.fillRect(sunBox.x - 10, sunBox.y + 10 + y, sunBox.width + 20, height);\r\n    }\r\n    context.filter = \"none\";\r\n};\r\n\r\nconst drawSunHaze = (context, sunBox) => {\r\n    const alpha = \"80\";\r\n    context.globalCompositeOperation = \"hard-light\";\r\n    context.filter = \"blur(100px)\";\r\n    context.fillStyle = getSunHazeGradient(context, sunBox, alpha);\r\n    context.beginPath();\r\n    context.arc(sunBox.x + sunBox.width / 2, sunBox.y + sunBox.height / 2, sunBox.width / 2, 0, Math.PI * 2);\r\n    context.fill();\r\n    context.filter = \"none\";\r\n    context.globalCompositeOperation = \"source-over\";\r\n};\r\n\r\nconst drawBackground = (context, canvas, store, frameCount) => {\r\n    const grad = getBGGradient(context, canvas);\r\n    context.fillStyle = grad;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    const sunBox = getSunBox(canvas, store.floorHeight);\r\n    drawSun(context, sunBox);\r\n    context.fillStyle = grad;\r\n    drawSunLines(context, sunBox, frameCount);\r\n    drawSunHaze(context, sunBox);\r\n};\r\n\r\nexport { drawBackground };\r\n","export default __webpack_public_path__ + \"static/media/house_sample.f6a686d9.png\";","import HousesImage from \"../../../content/house_sample.png\";\r\n\r\nlet housesImages = null;\r\n\r\nlet houseBox = {\r\n    width: 96,\r\n    height: 384,\r\n};\r\n\r\nlet housesImage = null;\r\n\r\nconst createHousesGradient = (content) => {\r\n    const grad = content.createLinearGradient(houseBox.width / 2, 0, houseBox.width / 2, houseBox.height);\r\n    grad.addColorStop(0, \"red\");\r\n    grad.addColorStop(1, \"blue\");\r\n    return grad;\r\n};\r\n\r\nconst removeWhite = (context) => {\r\n    let imageData = context.getImageData(0, 0, houseBox.width, houseBox.height);\r\n    let data = imageData.data;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n        const [r, g, b] = [data[i], data[i + 1], data[i + 2]];\r\n        if (r === 255 && g === 255 && b === 255) {\r\n            data[i + 0] = 0;\r\n            data[i + 1] = 0;\r\n            data[i + 2] = 0;\r\n            data[i + 3] = 0;\r\n        }\r\n    }\r\n    context.putImageData(imageData, 0, 0);\r\n};\r\n\r\nconst loadImage = (url) => {\r\n    return new Promise((resolve) => {\r\n        const image = new Image();\r\n        image.src = url;\r\n        image.onload = () => resolve(image);\r\n    });\r\n};\r\n\r\nconst loadHouseImages = (urls) => {\r\n    let pendingImages = urls.map(loadImage);\r\n    Promise.all(pendingImages).then((images) => {\r\n        housesImages = [...images];\r\n    });\r\n};\r\n\r\nconst parseHouses = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    canvas.width = houseBox.width;\r\n    canvas.height = houseBox.height;\r\n    const gradient = createHousesGradient(context);\r\n    context.fillStyle = gradient;\r\n\r\n    let imageURLs = [];\r\n    for (let i = 0; i < housesImage.width / houseBox.width; i++) {\r\n        context.fillRect(0, 0, houseBox.width, houseBox.height);\r\n        context.drawImage(\r\n            housesImage,\r\n            i * houseBox.width,\r\n            0,\r\n            houseBox.width,\r\n            houseBox.height,\r\n            0,\r\n            0,\r\n            houseBox.width,\r\n            houseBox.height\r\n        );\r\n        removeWhite(context);\r\n        imageURLs.push(canvas.toDataURL());\r\n    }\r\n    loadHouseImages(imageURLs);\r\n};\r\n\r\nconst loadHouses = () => {\r\n    housesImage = new Image();\r\n    housesImage.src = HousesImage;\r\n    housesImage.onload = parseHouses;\r\n};\r\n\r\nexport { housesImages, housesImage, houseBox, loadHouses };\r\n","import { housesImages, loadHouses, housesImage, houseBox } from \"./houseLoading\";\r\n\r\nlet housesCache = null;\r\nlet oldCount = 0;\r\n\r\nconst addHousesToCache = (amount) => {\r\n    for (let i = 0; i < amount; i++) {\r\n        housesCache.push(Math.floor(Math.random() * (housesImages.length + 1)) - 1);\r\n    }\r\n};\r\n\r\nconst processCache = (numberOfLines) => {\r\n    if (oldCount === numberOfLines) return;\r\n\r\n    if (housesCache === null) {\r\n        housesCache = [];\r\n        addHousesToCache(numberOfLines);\r\n    } else {\r\n        if (oldCount < numberOfLines) {\r\n            addHousesToCache(numberOfLines - oldCount);\r\n        } else {\r\n            //housesCache.length = numberOfLines; // it works but feels cheap\r\n            housesCache = housesCache.slice(0, numberOfLines);\r\n        }\r\n    }\r\n\r\n    oldCount = numberOfLines;\r\n};\r\n\r\nconst draw = (context, scale, floorHeight, offset) => {\r\n    let width = scale;\r\n    let height = (houseBox.height / houseBox.width) * width;\r\n    for (let i = 0; i < housesCache.length; i++) {\r\n        let houseIndex = housesCache[i];\r\n\r\n        // add empty houses\r\n        if (houseIndex === -1) {\r\n            continue;\r\n        }\r\n        let house = housesImages[houseIndex];\r\n        context.drawImage(\r\n            house,\r\n            0,\r\n            0,\r\n            houseBox.width,\r\n            houseBox.height,\r\n            (i - 1) * scale + scale * offset,\r\n            floorHeight - height,\r\n            width + 1,\r\n            height\r\n        );\r\n    }\r\n};\r\n\r\nlet oldOffset = 0;\r\nconst shouldUpdate = (offset) => {\r\n    const update = Math.abs(oldOffset - offset) > 0.9;\r\n    oldOffset = offset;\r\n    return update;\r\n};\r\n\r\nconst drawHouses = (context, canvas, store, frameCount) => {\r\n    if (housesImage == null) {\r\n        loadHouses();\r\n        return;\r\n    }\r\n    if (housesImages === null) {\r\n        // waiting for the houses to load.\r\n        return;\r\n    }\r\n\r\n    processCache(store.numberOfLines + 1);\r\n    const scale = canvas.width / store.numberOfLines;\r\n    const offset = (frameCount % 100) / 100;\r\n    const floorHeight = store.floorHeight * canvas.height;\r\n\r\n    if (shouldUpdate(offset)) {\r\n        housesCache.unshift(housesCache.pop());\r\n    }\r\n\r\n    draw(context, scale, floorHeight, offset);\r\n};\r\n\r\nexport { drawHouses };\r\n","const drawDebug = (context, frameCount) => {\r\n    const canvas = context.canvas;\r\n    let radius = 80;\r\n    context.fillStyle = \"#ffffffa0\";\r\n    context.beginPath();\r\n    context.arc(\r\n        canvas.width - radius - 10,\r\n        canvas.height - radius - 10,\r\n        radius * Math.sin(frameCount * 0.05) ** 2,\r\n        0,\r\n        2 * Math.PI\r\n    );\r\n    context.fill();\r\n};\r\n\r\nconst drawDefault = (context) => {\r\n    const canvas = context.canvas;\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    context.font = \"48px courier\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"white\";\r\n    context.fillText(\"No input\", canvas.width / 2, canvas.height / 2);\r\n};\r\n\r\nlet prevMode = \"\";\r\nlet prevDimensions = { width: 0, height: 0 };\r\nconst needsUpdate = (context, mode) => {\r\n    const canvas = context.canvas;\r\n\r\n    if (prevMode !== mode) {\r\n        prevMode = mode;\r\n        // this is absolutely retarded, but without this code, drawing slows down to 10fps\r\n        let temp = canvas.width;\r\n        canvas.width = 0;\r\n        canvas.width = temp;\r\n    }\r\n\r\n    let update = canvas.width !== prevDimensions.width || canvas.height !== prevDimensions.height;\r\n    if (update) {\r\n        prevDimensions.width = canvas.width;\r\n        prevDimensions.height = canvas.height;\r\n    }\r\n    return update;\r\n};\r\n\r\nexport { drawDebug, drawDefault, needsUpdate };\r\n","import { updateBlinking } from \"../../displayModes/Blinking/draw\";\r\nimport { updateDots } from \"../../displayModes/Dots/draw\";\r\nimport { updateGradient } from \"../../displayModes/Gradient/draw\";\r\nimport { updateImage } from \"../../displayModes/Image/draw\";\r\nimport { updateParticles } from \"../../displayModes/Particles/draw\";\r\nimport { updateRadial } from \"../../displayModes/Radial/draw\";\r\nimport { updateSynthwave } from \"../../displayModes/Synthwave/draw\";\r\n\r\nimport { drawDebug, drawDefault, needsUpdate } from \"./canvasUpdateHelper\";\r\n\r\nconst updaters = {\r\n    Blinking: updateBlinking,\r\n    Dots: updateDots,\r\n    Gradient: updateGradient,\r\n    Image: updateImage,\r\n    Particles: updateParticles,\r\n    Radial: updateRadial,\r\n    Synthwave: updateSynthwave,\r\n};\r\n\r\nconst CanvasUpdate = (context, frameCount, storage) => {\r\n    const needToUpdate = needsUpdate(context, storage.config.mode);\r\n\r\n    drawDefault(context);\r\n\r\n    if (storage.config.mode in updaters) {\r\n        const updater = updaters[storage.config.mode];\r\n        updater(context, storage, frameCount, needToUpdate);\r\n    }\r\n\r\n    if (storage.config.debug) {\r\n        drawDebug(context, frameCount);\r\n    }\r\n};\r\n\r\nexport default CanvasUpdate;\r\n","const draw = (context) => {\r\n    const canvas = context.canvas;\r\n    context.fillStyle = \"green\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\nconst updateParticles = (context, { imageUrl, ...Storage }) => {\r\n    draw(context);\r\n};\r\n\r\nexport { updateParticles };\r\n","import { getRadius, addColorStops, getSpeed } from \"../../display/drawing/GradientFactory\";\r\n\r\nconst getRadialGradient = (context, radius) => {\r\n    const canvas = context.canvas;\r\n    return context.createRadialGradient(\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        0,\r\n        canvas.width / 2,\r\n        canvas.height / 2,\r\n        radius\r\n    );\r\n};\r\n\r\nconst createRadial = (context, storage, frameCount) => {\r\n    const canvas = context.canvas;\r\n    const radius = getRadius(canvas, storage.colors, \"Radial\");\r\n    const gradient = getRadialGradient(context, radius);\r\n    const speed = getSpeed(frameCount, storage.radial.speed);\r\n\r\n    return addColorStops(gradient, speed, storage.colors);\r\n};\r\n\r\nconst updateRadial = (context, storage, frameCount) => {\r\n    context.fillStyle = createRadial(context, storage, frameCount);\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n};\r\n\r\nexport { updateRadial };\r\n","import { drawFloor } from \"./helpers/floor\";\r\nimport { drawBackground } from \"./helpers/background\";\r\nimport { drawHouses } from \"./helpers/houses\";\r\n\r\nconst updateSynthwave = (context, storage, frameCount) => {\r\n    let args = [context, context.canvas, storage.synth, frameCount];\r\n    drawBackground(...args);\r\n    drawHouses(...args);\r\n    context.globalAlpha = 0.9;\r\n    drawFloor(...args);\r\n    context.globalAlpha = 1;\r\n};\r\n\r\nexport { updateSynthwave };\r\n","import React from \"react\";\r\n\r\nimport useWindowSize from \"./windowSize\";\r\nimport useCanvas from \"./useCanvas\";\r\nimport CanvasUpdate from \"../drawing/canvasUpdate\";\r\n\r\nconst Canvas = () => {\r\n    const { width, height } = useWindowSize();\r\n    const canvasRef = useCanvas(CanvasUpdate);\r\n\r\n    return <canvas ref={canvasRef} width={width} height={height} />;\r\n};\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\n\r\nimport Canvas from \"./Canvas\";\r\n\r\nconst Display = () => {\r\n    return <Canvas />;\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Checkbox } from \"@mui/material\";\r\n\r\nimport { AnimatedSettingsOverlay } from \"./menu/SettingsOverlay\";\r\nimport Display from \"./display/canvas/Display\";\r\n\r\nconst MainContainer = () => {\r\n    const [checked, setCheck] = useState(true);\r\n    return (\r\n        <div>\r\n            <Checkbox\r\n                sx={{\r\n                    position: \"absolute\",\r\n                    bottom: 7,\r\n                    left: 7,\r\n                }}\r\n                checked={checked}\r\n                onChange={({ target }) => setCheck(target.checked)}\r\n            />\r\n            <AnimatedSettingsOverlay active={checked} />\r\n            <Display />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { CssBaseline, ThemeProvider, createTheme } from \"@mui/material\";\r\n\r\nimport MainContainer from \"./MainContainer\";\r\n\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        mode: \"dark\",\r\n    },\r\n    spacing: 8,\r\n});\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.StrictMode>\r\n            <RecoilRoot>\r\n                <ThemeProvider theme={theme}>\r\n                    <CssBaseline />\r\n                    <MainContainer />\r\n                </ThemeProvider>\r\n            </RecoilRoot>\r\n        </React.StrictMode>\r\n    );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}